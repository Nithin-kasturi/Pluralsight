    1  sudo apt update
    2  sudo apt install openjdk-11-jdk
    3  wget -q -O - https://pkg.jenkins.io/ci.gpg.key | sudo apt-key add -
    4  sudo sh -c 'echo deb http://pkg.jenkins.io/debian/ stable main > /etc/apt/sources.list.d/jenkins.list'
    5  sudo apt update
    6  sudo apt install jenkins
    7  sudo wget -O /usr/share/keyrings/jenkins-keyring.asc   https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    8  echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]"   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
    9  sudo apt-get update
   10  sudo apt-get install jenkins
   11  java -version
   12  ls
   13  vim first.sh
   14  sh first.sh 
   15  docker version
   16  minikube start --driver=docker
   17  minikube status
   18  kubectl -version
   19  kubectl get pods
   20  sudo snap install kubectl
   21  sudo snap install kubectl --classic
   22  kubectl get pods
   23  git clone https://github.com/iam-veeramalla/go-web-app
   24  cd go-web-app/
   25  code .
   26  cd ..
   27  rmdir go-web-app/
   28  rmdir -f go-web-app/
   29  rmdir -r go-web-app/
   30  rmdir --help
   31  rmdir -rf go-web-app/
   32  rm -f go-web-app/
   33  rm -r go-web-app/
   34  rm -rf go-web-app/
   35  ls
   36  gi clone https://github.com/Nithin-kasturi/go-web-app
   37  git clone https://github.com/Nithin-kasturi/go-web-app
   38  cd go-web-app/
   39  code .
   40  docker login
   41  ls
   42  docker build -t nithin8/go-web-app:v1 .
   43  go
   44  sudo snap install go
   45  sudo snap install go --classic
   46  docker build -t nithin8/go-web-app:v1 .
   47  go 
   48  docker build -t nithin8/go-web-app:v1 .
   49  docker run -p -it 8080:8080 nithin8/go-web-app:v1
   50  docker run -p 8080:8080 -it nithin8/go-web-app:v1
   51  docker push nithin8/go-web-app:v1
   52  kubectl apply -f kubernetes/manifests/deployment.yml
   53  ls
   54  kubectl get pods
   55  kubectl get ing
   56  kubectl get pods
   57  kubectl edit svc go-web-app
   58  kubectl get svc
   59  kubectl get nodes -o wide
   60  minikube ip
   61  kubectl get svc
   62  minikube tunnel
   63  minikube ip
   64  kubectl get svc
   65  kubectl port-forward svc/go-web-app 8080:80
   66  minikube addons enable ingress
   67  microk8s enable ingress
   68  sudo snap install microk8s
   69  sudo snap install microk8s --classic
   70  kubectl get svc ing
   71  kubectl get ing
   72  nslookup 192.168.49.2
   73  sudo apt install bind9-dnsutils
   74  nslookup 192.168.49.2
   75  kubectl get ing
   76  nslookup 192.168.49.2
   77  nslookup go-web-app.local
   78  sudo nano /etc/hosts
   79  nslookup go-web-app.local
   80  helm
   81  sudo snap install helm
   82  sudo snap install helm --classic
   83  helm version
   84  helm create go-web-app-chart
   85  cd Helm/
   86  helm create go-web-app-chart
   87  cd go-web-app-chart/
   88  ls
   89  rm charts
   90  rm -rf charts
   91  cd templates/
   92  rm -rf .
   93  cp ../../../Kubernetes/manifests/' .
   94  cp ../../../Kubernetes/manifests/* .
   95  ls
   96  rm -rf *
   97  ls
   98  cp ../../../Kubernetes/manifests/* .
   99  ls
  100  kubectl get all
  101  cd ./
  102  cd /
  103  ls
  104  java -version
  105  sudo systemctl start jenkins
  106  sudo wget -O /usr/share/keyrings/jenkins-keyring.asc   https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
  107  echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]"   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
  108  sudo apt-get update
  109  sudo apt-get install jenkins
  110  sudo systemctl start jenkins
  111  sudo kill $(sudo lsof -t -i:8080)
  112  sudo jenkins start
  113  sudo apt update
  114  sudo apt install fontconfig openjdk-17-jre
  115  java -version
  116  openjdk version "17.0.13" 2024-10-15
  117  OpenJDK Runtime Environment (build 17.0.13+11-Debian-2)
  118  OpenJDK 64-Bit Server VM (build 17.0.13+11-Debian-2, mixed mode, sharing)
  119  jav -version
  120  java -version
  121  sudo start jenkins
  122  sudo jenkins start
  123  curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
  124  sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
  125  minikube status
  126  minikube start
  127  curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
  128  sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
  129  minikube status
  130  minikube start --driver=docker
  131  docker --version
  132  sudo apt update
  133  sudo apt install docker.io
  134  sudo systemctl start docker
  135  sudo systemctl enable docker
  136  sudo systemctl status docker
  137  minikube start --driver=docker
  138  sudo usermod -aG docker $USER
  139  minikube start --driver=docker
  140  newgrp docker
  141  echo UGNYVERGNzNQSi12VmJsaA== | base64 --decode
  142  kubectl get all
  143  kubectl port-forward svc/go-web-app 8080:80
  144  kubectl port-forward svc/go-web-app 808:80
  145  kubectl port-forward svc/go-web-app 8081:80
  146  kubectl get pods
  147  kubectl get svc
  148  kubectl port-forward svc/go-web-app 8081:80
  149  history
  150  history >>history.txt
    1  sudo apt update
    2  sudo apt install openjdk-11-jdk
    3  wget -q -O - https://pkg.jenkins.io/ci.gpg.key | sudo apt-key add -
    4  sudo sh -c 'echo deb http://pkg.jenkins.io/debian/ stable main > /etc/apt/sources.list.d/jenkins.list'
    5  sudo apt update
    6  sudo apt install jenkins
    7  sudo wget -O /usr/share/keyrings/jenkins-keyring.asc   https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    8  echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]"   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
    9  sudo apt-get update
   10  sudo apt-get install jenkins
   11  java -version
   12  ls
   13  vim first.sh
   14  sh first.sh 
   15  docker version
   16  minikube start --driver=docker
   17  minikube status
   18  kubectl -version
   19  kubectl get pods
   20  sudo snap install kubectl
   21  sudo snap install kubectl --classic
   22  kubectl get pods
   23  git clone https://github.com/iam-veeramalla/go-web-app
   24  cd go-web-app/
   25  code .
   26  cd ..
   27  rmdir go-web-app/
   28  rmdir -f go-web-app/
   29  rmdir -r go-web-app/
   30  rmdir --help
   31  rmdir -rf go-web-app/
   32  rm -f go-web-app/
   33  rm -r go-web-app/
   34  rm -rf go-web-app/
   35  ls
   36  gi clone https://github.com/Nithin-kasturi/go-web-app
   37  git clone https://github.com/Nithin-kasturi/go-web-app
   38  cd go-web-app/
   39  code .
   40  docker login
   41  ls
   42  docker build -t nithin8/go-web-app:v1 .
   43  go
   44  sudo snap install go
   45  sudo snap install go --classic
   46  docker build -t nithin8/go-web-app:v1 .
   47  go 
   48  docker build -t nithin8/go-web-app:v1 .
   49  docker run -p -it 8080:8080 nithin8/go-web-app:v1
   50  docker run -p 8080:8080 -it nithin8/go-web-app:v1
   51  docker push nithin8/go-web-app:v1
   52  kubectl apply -f kubernetes/manifests/deployment.yml
   53  ls
   54  kubectl get pods
   55  kubectl get ing
   56  kubectl get pods
   57  kubectl edit svc go-web-app
   58  kubectl get svc
   59  kubectl get nodes -o wide
   60  minikube ip
   61  kubectl get svc
   62  minikube tunnel
   63  minikube ip
   64  kubectl get svc
   65  kubectl port-forward svc/go-web-app 8080:80
   66  minikube addons enable ingress
   67  microk8s enable ingress
   68  sudo snap install microk8s
   69  sudo snap install microk8s --classic
   70  kubectl get svc ing
   71  kubectl get ing
   72  nslookup 192.168.49.2
   73  sudo apt install bind9-dnsutils
   74  nslookup 192.168.49.2
   75  kubectl get ing
   76  nslookup 192.168.49.2
   77  nslookup go-web-app.local
   78  sudo nano /etc/hosts
   79  nslookup go-web-app.local
   80  helm
   81  sudo snap install helm
   82  sudo snap install helm --classic
   83  helm version
   84  helm create go-web-app-chart
   85  cd Helm/
   86  helm create go-web-app-chart
   87  cd go-web-app-chart/
   88  ls
   89  rm charts
   90  rm -rf charts
   91  cd templates/
   92  rm -rf .
   93  cp ../../../Kubernetes/manifests/' .
   94  cp ../../../Kubernetes/manifests/* .
   95  ls
   96  rm -rf *
   97  ls
   98  cp ../../../Kubernetes/manifests/* .
   99  ls
  100  kubectl get all
  101  cd ./
  102  cd /
  103  ls
  104  java -version
  105  sudo systemctl start jenkins
  106  sudo wget -O /usr/share/keyrings/jenkins-keyring.asc   https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
  107  echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]"   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
  108  sudo apt-get update
  109  sudo apt-get install jenkins
  110  sudo systemctl start jenkins
  111  sudo kill $(sudo lsof -t -i:8080)
  112  sudo jenkins start
  113  sudo apt update
  114  sudo apt install fontconfig openjdk-17-jre
  115  java -version
  116  openjdk version "17.0.13" 2024-10-15
  117  OpenJDK Runtime Environment (build 17.0.13+11-Debian-2)
  118  OpenJDK 64-Bit Server VM (build 17.0.13+11-Debian-2, mixed mode, sharing)
  119  jav -version
  120  java -version
  121  sudo start jenkins
  122  sudo jenkins start
  123  curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
  124  sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
  125  minikube status
  126  minikube start
  127  curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
  128  sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
  129  minikube status
  130  minikube start --driver=docker
  131  docker --version
  132  sudo apt update
  133  sudo apt install docker.io
  134  sudo systemctl start docker
  135  sudo systemctl enable docker
  136  sudo systemctl status docker
  137  minikube start --driver=docker
  138  sudo usermod -aG docker $USER
  139  minikube start --driver=docker
  140  newgrp docker
  141  echo UGNYVERGNzNQSi12VmJsaA== | base64 --decode
  142  kubectl get all
  143  kubectl port-forward svc/go-web-app 8080:80
  144  kubectl port-forward svc/go-web-app 808:80
  145  kubectl port-forward svc/go-web-app 8081:80
  146  kubectl get pods
  147  kubectl get svc
  148  kubectl port-forward svc/go-web-app 8081:80
  149  history
  150  history >>history.txt
  151  ls
  152  cat history.txt 
  153  cp history.txt go-web-app/
  154  cd go-web-app/
  155  ls
  156  git add .
  157  git commit -m 'Add history'
  158  git push
  159  kubectl port-forward svc/go-web-app 8080:80
  160  minikube tunnel
  161  kubectl port-forward svc/go-web-app 8080:80
  162  argocd
  163  argocs
  164  kubectl get pods
  165  kubectl delete pods 
  166  kubectl delete pods all
  167  kubectl delete all
  168  kubectl delete all pods
  169  kubectl delete -all pods
  170  kubectl delete --all pods
  171  kubectl delete --all svc
  172  kubectl delete --all ing
  173  kubectl get nodes
  174  kubectl get pods
  175  kubectl get svc
  176  kubectl get ing
  177  ls
  178  cd go-web-app/
  179  cd Helm/
  180  helm install go-web-app ./go-web-app-chart/
  181  kubectl delete deployment go-web-app
  182  kubectl get pods
  183  helm install go-web-app ./go-web-app-chart/
  184  kubectl get svc
  185  kubectl get pods
  186  helm install go-web-app ./go-web-app-chart/
  187  kubectl delete deployment go-web-app
  188  kubectl delete --all ing
  189  helm install go-web-app ./go-web-app-chart/
  190  kubectl delete deployment go-web-app
  191  kubectl get svc
  192  kubectl get deployments --all-namespaces
  193  kubectl delete deployment go-web-app 
  194  kubectl get deployments -n default
  195  helm install go-web-app ./go-web-app-chart/
  196  kubectl get all -n default | grep go-web-app
  197  helm list --all-namespaces
  198  helm uninstall go-web-app 
  199  helm install go-web-app ./go-web-app-chart/
  200  kubectl get pods
  201  helm uninstall go-web-app
  202  history
  203  kubectl create namespace argocd
  204  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.8.4/manifests/install.yaml
  205  kubectl get svc
  206  kubectl get all -n argocd
  207  kubectl port-forward svc/argocd-server -n argocd 8080:443
  208  kubectl get secrets -n argocd
  209  kubectl edit argocd-initial-admin-secret -n argocd
  210  kubectl edit secret argocd-initial-admin-secret -n argocd
  211  echo UGNYVERGNzNQSi12VmJsaA== | base64
  212  kubectl port-forward svc/argocd-server -n argocd 8080:443
  213  git add .
  214  git commit -m 'Done till Helm'
  215  git config --global user.email "nithinkasturi8@gmail.com"
  216  git config --global user.name "Nithin-kasturi"
  217  git commit -m 'Done till Helm'
  218  git push
  219  git add .
  220  git commit -m 'Implemented CI'
  221  git push
  222  git pull
  223  git add .
  224  git commit -m 'helm change'
  225  git push
  226  git add .
  227  git commit -m 'Making changes'
  228  git push
  229  git add .
  230  git commit -m 'Helm update'
  231  git push
  232  git add .
  233  git commit -m 'Add history'
  234  git push
  235  git pull
  236  git push
  237  git pull main
  238  git push
  239  git add .
  240  git push
  241  git pull
  242  git pull main
  243  git pull
  244  git push
  245  git config pull.rebase false
  246  git pull
  247  git push
  248  npm --version
  249  node --v
  250  node --version
  251  ls
  252  git clone https://github.com/Nithin-kasturi/Pluralsight.git
  253  ls
  254  cd Pluralsight/
  255  ls
  256  cd node-devops/
  257  ls
  258  jenkins
  259  systemctl jenkins start
  260  systemctl start jenkins
  261  jenkins start
  262  sudo systemctl start jenkins
  263  sudo systemctl enable jenkins
  264  sudo systemctl start jenkins
  265  sudo systemctl start jenkinssudo systemctl status jenkinssudo systemctl status jenkinssudo systemctl status jenkinssudo systemctl status jenkinssudo systemctl status jenkinssudo systemctl status jenk
  266  sudo systemctl start jenkins
  267  sudo systemctl status jenkins
  268  nodejs
  269  sudo apt install nodejs
  270  sudo apt update
  271  sudo apt install nodejs npm
  272  docker
  273  docker useradd -ag $USER
  274  docker useradd -aG $USER
  275  newgrp docker
  276  reboot
  277  sudo reboot
  278  docker run hello-world
  279  sudo usermod -a -G docker jenkins
  280  ls -l /var/run/docker.sock
  281  sudo chown root:docker /var/run/docker.sock
  282  sudo chmod 660 /var/run/docker.sock
  283  sudo usermod -aG docker jenkins
  284  sudo systemctl restart jenkins
  285  history >> history.txt
